grid_map_visualization:
  ros__parameters:
    grid_map_topic: /costmap
    grid_map_visualizations:
      [
        elevation_grid,
        elevation_smooth,
        traversability,
        traversability_inflated,
      ]

    elevation_grid:
      type: occupancy_grid
      params:
        layer: elevation
        data_min: -0.16
        data_max: 0.08

    elevation_smooth:
      type: occupancy_grid
      params:
        layer: elevation_smooth
        data_min: -0.16
        data_max: 0.08

    traversability:
      type: occupancy_grid
      params:
        layer: traversability
        data_min: 0.0
        data_max: 1.0

    traversability_inflated:
      type: occupancy_grid
      params:
        layer: traversability_inflated
        data_min: 0.0
        data_max: 1.0

traversability_mapping:
  ros__parameters:
    pointcloud_topic: /cloud_unstructured_fullframe
    output_map_topic: /costmap

    filters:
      filter1:
        name: buffer_normalizer
        type: gridMapFilters/BufferNormalizerFilter

      filter2: # Reduce noise with a radial blurring filter.
        name: mean_in_radius
        type: gridMapFilters/MeanInRadiusFilter
        params:
          input_layer: elevation
          output_layer: elevation_smooth
          radius: 0.1

      filter3: # Compute surface normals.
        name: surface_normals
        type: gridMapFilters/NormalVectorsFilter
        params:
          input_layer: elevation
          output_layers_prefix: normal_vectors_
          radius: 0.1
          normal_vector_positive_axis: z

      filter4: # Compute slope from surface normal.
        name: slope
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: slope
          expression: acos(normal_vectors_z)

      filter5: # Compute roughness as absolute difference from map to smoothened map.
        name: roughness
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: roughness
          expression: abs(elevation - elevation_smooth)

      filter6: # Compute traversability as normalized weighted sum of slope and roughness.
        name: traversability
        type: gridMapFilters/MathExpressionFilter
        params:
          output_layer: traversability
          expression: 0.5 * (1.0 - (slope / 0.6)) + 0.5 * (1.0 - (roughness / 0.1))

      filter7: # Set lower threshold on traversability.
        name: traversability_lower_threshold
        type: gridMapFilters/ThresholdFilter
        params:
          layer: traversability
          lower_threshold: 0.0
          set_to: 0.0

      filter8: # Set upper threshold on traversability.
        name: traversability_upper_threshold
        type: gridMapFilters/ThresholdFilter
        params:
          layer: traversability
          upper_threshold: 1.0
          set_to: 1.0

      filter9:
        name: gaussian_kernel
        type: urcPerception/GaussianFilter
        params:
          input_layer: traversability
          output_layer: traversability_inflated
          radius: 0.5
          gaussian_coeff: 4.0
